The custom directory contains the information necessary to build 
extension for the Shibboleth IdP and SP at the same time they are built, and
have these extensions bundled with their respective war filee.

1. Directory Structure
    custom
      /lib - this directory is where an extension and its 
             libraries are placed after they are built
      /web - this directory is where an extension's web pages
             are placed after the extension is built
      extension-build.properties - this contains default properties 
                                 needed for the extension build process
                                 !!! DO NOT EDIT THIS FILE !!!
      extension-build.xml - the ant build file for building extensions
                                 !!! DO NOT EDIT THIS FILE !!!
      README.txt - this document
                               

2. Using the Extension Build Process
The extension build process depends on an extension having a specific directory
structure, so that the extension build file knows where to find everything.  The 
root directory of you extension can be named anything you with, but it must contain
the following directories
    your-extension-directory/
       etc/ - [Optional] This directory contains anything that isn't java source but still needs 
              to be on the classpath.  This can include subdirectories, and can be excluded.
       lib/ - [Optional] any third party jars your extension needs
       src/ - [Optional] your extension's source
       tests/ - [Optional] Your extension's JUnit test case source.
       web/ - [Optional] Any web pages, images, JSPs, etc. that should be included with the war
       build.properties - [REQUIRED] build properties for your extension 
                            (see below for required and optional properties)
  
2.1 Steps for Using the Extensions Build Process
I.  Create a directory under the custom directory with the structure mentioned above.  Any 
extra directories will be ignored so it is safe to bundle additional information with your 
extension such as documentation.

II. Place your code and other resources in the directory structure you just set up

III. Compile and deploy Shibboleth as normal.

2.2 Build File Properties
  The build file supports the following properties on a per-extension basis.
    ext.name - [REQUIRED] The name of your resulting extension jar file (.jar will be appended to the name)
    gen.ext.docs - [Optional] This controls whether java docs will be generated for your
                   extension.  A value of "true" will result in them being generated, any other 
                   value will result in them not being generated, if this property is missing 
                   the defualt value of "true" is used.
    test.ext - [Optional] This controls whether the JUnit tests for your extension are run.
                   A value of "true" will result in them being run, any other value will result 
                   in them not being skipped, if this property is missing the defualt value of 
                   "true" is used.

3. Cautionary Note
DO NOT include libraries, with your extension, that are included with the Shibboleth
IdP or SP.  If you do, and there are version mismatches between the two jars, you will get 
unexpected exceptions during runtime as class versions conflict.