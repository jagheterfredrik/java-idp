<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">

    <display-name>Shibboleth $IDP_VERSION$ Identity Provider</display-name>

    <!--
        Spring 2.0 application context files.  Files are loaded in the order they appear with subsequent files 
        overwriting same named beans in previous files.
    -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>file://$IDP_HOME$/conf/internal.xml; file://$IDP_HOME$/conf/service.xml;</param-value>
    </context-param>

    <!-- Spring 2.0 listener used to load up the configuration -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--  Add IdP Session object to incoming profile requests -->
    <filter>
        <filter-name>IdPSessionFilter</filter-name>
        <filter-class>edu.internet2.middleware.shibboleth.idp.session.IdPSessionFilter</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>IdPSessionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Profile Request Dispatcher -->
    <servlet>
        <servlet-name>ProfileRequestDispatcher</servlet-name>
        <servlet-class>edu.internet2.middleware.shibboleth.common.profile.ProfileRequestDispatcherServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>ProfileRequestDispatcher</servlet-name>
        <url-pattern>/profile/*</url-pattern>
    </servlet-mapping>

    <!-- Authentication Engine Entry Point -->
    <servlet>
        <servlet-name>AuthenticationEngine</servlet-name>
        <servlet-class>edu.internet2.middleware.shibboleth.idp.authn.AuthenticationEngine</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>AuthenticationEngine</servlet-name>
        <url-pattern>/AuthnEngine</url-pattern>
    </servlet-mapping>

    <!-- Servlet protected by container user for RemoteUser authentication -->
    <servlet>
        <servlet-name>RemoteUserAuthHandler</servlet-name>
        <servlet-class>edu.internet2.middleware.shibboleth.idp.authn.provider.RemoteUserAuthServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>RemoteUserAuthHandler</servlet-name>
        <url-pattern>/Authn/RemoteUser</url-pattern>
    </servlet-mapping>
    
    <!-- Servlet for doing Username/Password authentication -->
    <servlet>
        <servlet-name>UsernamePasswordAuthHandler</servlet-name>
        <servlet-class>edu.internet2.middleware.shibboleth.idp.authn.provider.UsernamePasswordLoginServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>UsernamePasswordAuthHandler</servlet-name>
        <url-pattern>/Authn/UserPassword</url-pattern>
    </servlet-mapping>
    
    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/idp-error.jsp</location>
    </error-page>
    
    <error-page>
        <error-code>404</error-code>
        <location>/idp-404.jsp</location>
    </error-page>

<!-- Uncomment to use container managed authentication -->
<!--
    <security-constraint>
        <display-name>Shibboleth IdP</display-name>
        <web-resource-collection>
            <web-resource-name>user authentication</web-resource-name>
            <url-pattern>/Authn/RemoteUser</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint> 
            <role-name>users</role-name> 
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
-->

<!-- Uncomment if you want BASIC auth managed by the container -->
<!--
    <login-config>
      <auth-method>BASIC</auth-method>
      <realm-name>IdP Password Authentication</realm-name>
    </login-config>
-->

<!-- Uncomment if you want form-based auth managed by the container -->
<!--
    <login-config>
        <auth-method>FORM</auth-method>
        <realm-name>IdP Password Authentication</realm-name>
        <form-login-config>
            <form-login-page>/login.jsp</form-login-page>
            <form-error-page>/login-error.jsp</form-error-page>
        </form-login-config>
    </login-config>
-->

</web-app>